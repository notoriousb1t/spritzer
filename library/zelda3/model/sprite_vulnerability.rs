use strum_macros::Display;

use super::sprite_id::SpriteId;
use super::sprite_table::get_sprite_type;
use super::sprite_type::SpriteType;

#[derive(Copy, Clone, Debug, Display, Eq, PartialEq, Hash)]
pub(crate) enum SpriteVulnerability {
    /// Sprite cannot be damaged through normal means.
    Invulnerable,
    /// Sprite takes most forms of damage.
    All,
    /// Sprite primarily takes damage from a Bow.
    Bow,
    /// Sprite primarily takes damage from a Hammer.
    Hammer,
    /// Sprite primarily takes damage from the Fire Rod.
    FireRod,
    /// Bomb is required (or nearly) to defeat the Sprite.
    Bomb,
}

pub(crate) fn get_sprite_vulnerability(sprite_id: &SpriteId) -> SpriteVulnerability {
    match sprite_id {
        SpriteId::x19_POE => SpriteVulnerability::Invulnerable,
        SpriteId::x27_DEADROCK => SpriteVulnerability::Invulnerable,
        SpriteId::x84_RED_EYEGORE => SpriteVulnerability::Bow,
        SpriteId::x8E_TERRORPIN => SpriteVulnerability::Hammer,
        // This isn't entirely true, but this is treated as a special damange enemy to prevent Stalfos from becoming
        // insurmountable in certain situations. That is, you can kill Stalfos Knights without bombs, but it takes
        // forever and isn't well known and is not fun.
        SpriteId::x91_STALFOS_KNIGHT => SpriteVulnerability::Bomb,
        SpriteId::xA1_FREEZOR => SpriteVulnerability::FireRod,
        _ => match get_sprite_type(sprite_id) {
            SpriteType::Enemy => SpriteVulnerability::All,
            SpriteType::Boss => SpriteVulnerability::All,
            _ => SpriteVulnerability::Invulnerable,
        },
    }
}

pub(crate) fn is_special_damage_sprite(sprite_id: &SpriteId) -> bool {
    match get_sprite_vulnerability(sprite_id) {
        crate::zelda3::model::SpriteVulnerability::Invulnerable => false,
        crate::zelda3::model::SpriteVulnerability::All => false,
        crate::zelda3::model::SpriteVulnerability::Bow => true,
        crate::zelda3::model::SpriteVulnerability::Hammer => true,
        crate::zelda3::model::SpriteVulnerability::FireRod => true,
        crate::zelda3::model::SpriteVulnerability::Bomb => true,
    }
}
